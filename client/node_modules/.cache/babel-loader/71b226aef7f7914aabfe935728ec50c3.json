{"ast":null,"code":"import _classCallCheck from \"/Users/angela/lighthouse/battlefy-exercise/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/angela/lighthouse/battlefy-exercise/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/angela/lighthouse/battlefy-exercise/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/angela/lighthouse/battlefy-exercise/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/angela/lighthouse/battlefy-exercise/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/angela/lighthouse/battlefy-exercise/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/angela/lighthouse/battlefy-exercise/src/MatchHistory.jsx\";\nimport React, { Component } from 'react';\nimport Champions from './en_US/champion.json';\nimport Items from './en_US/item.json';\nimport Runes from './en_US/runesReforged.json';\nimport SummonerSpells from './en_US/summoner.json';\n\nvar MatchHistory =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MatchHistory, _Component);\n\n  function MatchHistory(props) {\n    var _this;\n\n    _classCallCheck(this, MatchHistory);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MatchHistory).call(this, props));\n    _this.displayMatch = _this.displayMatch.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.findChampionName = _this.findChampionName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.findRuneName = _this.findRuneName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.findSummonerSpellName = _this.findSummonerSpellName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.findItemName = _this.findItemName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MatchHistory, [{\n    key: \"findChampionName\",\n    value: function findChampionName(key) {\n      var championName;\n      var parsedChampions = JSON.parse(JSON.stringify(Champions)).data;\n      Object.values(parsedChampions).forEach(function (champion) {\n        if (Number(champion.key) === key) {\n          championName = champion.name;\n        }\n      });\n      return championName;\n    }\n  }, {\n    key: \"findRuneName\",\n    value: function findRuneName(id) {\n      var runeName;\n      var parsedRunes = JSON.parse(JSON.stringify(Runes));\n      parsedRunes.forEach(function (rune) {\n        rune.slots.forEach(function (slot) {\n          slot.runes.forEach(function (runeSlot) {\n            if (Number(runeSlot.id) === id) {\n              runeName = runeSlot.name;\n            }\n          });\n        });\n      });\n      return runeName;\n    }\n  }, {\n    key: \"findSummonerSpellName\",\n    value: function findSummonerSpellName(key) {\n      var summonerSpellName;\n      var parsedSummonerSpells = JSON.parse(JSON.stringify(SummonerSpells)).data;\n      Object.values(parsedSummonerSpells).forEach(function (spell) {\n        if (Number(spell.key) === key) {\n          summonerSpellName = spell.name;\n        }\n      });\n      return summonerSpellName;\n    }\n  }, {\n    key: \"findItemName\",\n    value: function findItemName(key) {\n      var itemName;\n      var parsedItems = JSON.parse(JSON.stringify(Items)).data;\n      Object.keys(parsedItems).forEach(function (item) {\n        // console.log(item);\n        if (Number(item) === key) {\n          itemName = parsedItems.item;\n        }\n      });\n      console.log(itemName);\n      return itemName;\n    }\n  }, {\n    key: \"displayMatch\",\n    value: function displayMatch() {\n      var _this2 = this;\n\n      var matches = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      return matches.map(function (match) {\n        return React.createElement(\"div\", {\n          className: \"matchBox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Game Duration: \", Math.floor(match.gameDuration / 60), \" minutes and \", match.gameDuration % 60, \" seconds\"), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"Champion Played: \", _this2.findChampionName(match.champion), \" Level:\", match.stats.champLevel), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Summoner Spells: \", _this2.findSummonerSpellName(match.summSpellOne), \" & \", _this2.findSummonerSpellName(match.summSpellTwo)), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Items bought: \", match.stats.item0, \", \", match.stats.item1, \", \", match.stats.item2, \", \", match.stats.item3, \", \", match.stats.item4, \", \", match.stats.item5, \", \", match.stats.item6), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"CS: \", match.stats.totalMinionsKilled), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"CS/min: \", Math.floor(match.stats.totalMinionsKilled / match.gameDuration * 60 * 100) / 100), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"K/DA: \", Math.floor((match.stats.kills + match.stats.assists) / match.stats.deaths * 100) / 100), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"Runes: \", _this2.findRuneName(match.stats.perk0), \", \", _this2.findRuneName(match.stats.perk1), \", \", _this2.findRuneName(match.stats.perk2), \", \", _this2.findRuneName(match.stats.perk3), \", \", _this2.findRuneName(match.stats.perk4), \", \", _this2.findRuneName(match.stats.perk5)));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.findItemName(1001);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.props.summoner.name ? React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Displaying Match History for \", this.props.summoner.name) : React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Loading...\"), this.displayMatch(this.props.matches));\n    }\n  }]);\n\n  return MatchHistory;\n}(Component);\n\nexport default MatchHistory;","map":{"version":3,"sources":["/Users/angela/lighthouse/battlefy-exercise/src/MatchHistory.jsx"],"names":["React","Component","Champions","Items","Runes","SummonerSpells","MatchHistory","props","displayMatch","bind","findChampionName","findRuneName","findSummonerSpellName","findItemName","key","championName","parsedChampions","JSON","parse","stringify","data","Object","values","forEach","champion","Number","name","id","runeName","parsedRunes","rune","slots","slot","runes","runeSlot","summonerSpellName","parsedSummonerSpells","spell","itemName","parsedItems","keys","item","console","log","matches","map","match","Math","floor","gameDuration","stats","champLevel","summSpellOne","summSpellTwo","item0","item1","item2","item3","item4","item5","item6","totalMinionsKilled","kills","assists","deaths","perk0","perk1","perk2","perk3","perk4","perk5","summoner"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Champions from './en_US/champion.json';\nimport Items from './en_US/item.json';\nimport Runes from './en_US/runesReforged.json';\nimport SummonerSpells from './en_US/summoner.json';\n\nclass MatchHistory extends Component {\n  constructor(props) {\n    super(props);\n    this.displayMatch = this.displayMatch.bind(this);\n    this.findChampionName = this.findChampionName.bind(this);\n    this.findRuneName = this.findRuneName.bind(this);\n    this.findSummonerSpellName = this.findSummonerSpellName.bind(this);\n    this.findItemName = this.findItemName.bind(this);\n  }\n\n  findChampionName(key) {\n    let championName;\n    let parsedChampions = JSON.parse(JSON.stringify(Champions)).data;\n    Object.values(parsedChampions).forEach((champion) => {\n      if (Number(champion.key) === key) {\n        championName = champion.name;\n      }\n    });\n    return championName;\n  }\n\n  findRuneName(id) {\n    let runeName;\n    let parsedRunes = JSON.parse(JSON.stringify(Runes));\n    parsedRunes.forEach((rune) => {\n      rune.slots.forEach((slot) => {\n        slot.runes.forEach((runeSlot) => {\n          if (Number(runeSlot.id) === id) {\n            runeName = runeSlot.name;\n          }\n        });\n      });\n    });\n    return runeName;\n  }\n\n  findSummonerSpellName(key) {\n    let summonerSpellName;\n    let parsedSummonerSpells = JSON.parse(JSON.stringify(SummonerSpells)).data;\n    Object.values(parsedSummonerSpells).forEach((spell) => {\n      if (Number(spell.key) === key) {\n        summonerSpellName = spell.name;\n      }\n    });\n    return summonerSpellName;\n  }\n\n  findItemName(key) {\n    let itemName;\n    let parsedItems = JSON.parse(JSON.stringify(Items)).data;\n    Object.keys(parsedItems).forEach((item) => {\n      // console.log(item);\n      if (Number(item) === key) {\n        itemName = parsedItems.item;\n      }\n    });\n    console.log(itemName);\n    return itemName;\n  }\n\n  displayMatch(matches=[]) {\n    return matches.map(match => {\n      return (\n        <div className=\"matchBox\">\n          <h5>Game Duration: {Math.floor(match.gameDuration/60)} minutes and {match.gameDuration % 60} seconds</h5>\n          <h5>Champion Played: {this.findChampionName(match.champion)} Level:{match.stats.champLevel}</h5>\n          <h5>Summoner Spells: {this.findSummonerSpellName(match.summSpellOne)} & {this.findSummonerSpellName(match.summSpellTwo)}</h5>\n          <h5>Items bought: {match.stats.item0}, {match.stats.item1}, {match.stats.item2}, {match.stats.item3}, {match.stats.item4}, {match.stats.item5}, {match.stats.item6}</h5>\n          <h5>CS: {match.stats.totalMinionsKilled}</h5>\n          <h5>CS/min: {Math.floor((match.stats.totalMinionsKilled/match.gameDuration*60) * 100) / 100}</h5>\n          <h5>K/DA: {Math.floor(((match.stats.kills+match.stats.assists)/match.stats.deaths) * 100) / 100}</h5>\n          <h5>Runes: {this.findRuneName(match.stats.perk0)}, {this.findRuneName(match.stats.perk1)}, {this.findRuneName(match.stats.perk2)}, {this.findRuneName(match.stats.perk3)}, {this.findRuneName(match.stats.perk4)}, {this.findRuneName(match.stats.perk5)}</h5>\n        </div>\n        )\n    })\n  }\n\n  render() {\n    this.findItemName(1001);\n    return (\n      <div>\n        {this.props.summoner.name ? (<h1>Displaying Match History for {this.props.summoner.name}</h1>) : <h1>Loading...</h1>}\n        {this.displayMatch(this.props.matches)}\n      </div>\n    )\n  }\n}\n\nexport default MatchHistory;"]},"metadata":{},"sourceType":"module"}